@using Sdcb.PictureSpeaks.Services.DB

@{
    Lobby lobby = (Lobby)ViewData["Lobby"]!;
    Layout = null;
}
<html lang="zh-cn">
<head>
    <title>@lobby.Id - @lobby.CreateUser</title>
    <link href="~/lib/bootstrap/dist/css/bootstrap.css" rel="stylesheet" />
    <style>
        body {
            display: flex;
            flex-direction: column;
            height: 100vh;
            margin: 0;
        }

        .message-list {
            flex-grow: 1;
            overflow-y: auto;
            padding: 8px;
            display: flex;
            flex-direction: column;
        }

        .guess-area {
            padding: 8px;
            background: #f8f8f8;
            border-top: 1px solid #ccc;
            display: flex;
        }

            .guess-area input[type="text"] {
                flex-grow: 1;
                margin-right: 8px;
                padding: 10px;
            }

            /* 调整按钮样式 */
            .guess-area button {
                padding: 10px 20px;
                font-size: 16px;
                cursor: pointer;
            }

        .message-item {
            display: flex;
            align-items: flex-start;
        }

        .message-user {
            margin-right: 8px;
        }

        .message-item > img {
            width: calc(100% - 8px - 24px);
            height: auto;
        }

        @@media (min-width: 768px) {
            .message-item > img {
                max-width: 768px;
            }
        }
    </style>
</head>

<body>
    <div class="status">
        <a href="/">&lt;返回首页</a>
        @lobby.Id 由 @lobby.CreateUser 创建 |
        状态：<span data-bind="lobbyStatus: lobbyStatus"></span> |
        当前用户名：<span data-bind="text: userName"></span> <button type="button" data-bind="click: changeName">修改</button>
    </div>

    <hr />
    <!-- ko if: messages().length > 0 -->
    <div class="message-list" data-bind="foreach: messages">
        <div class="message-item">
            <label class="message-user" data-bind="text: user() + ' : '"></label>
            <!-- ko if: messageKind() === 0 -->
            <!-- ko if: user() === 'AI' -->
            <span data-bind="text: message" style="color: blue"></span>
            <!-- /ko -->
            <!-- ko if: user() !== 'AI' -->
            <span data-bind="text: message"></span>
            <!-- /ko -->
            <!-- /ko -->
            <!-- ko if: messageKind() === 1 -->
            <img data-bind="attr: {src: '/image/' + message()}" />
            <!-- /ko -->
            <!-- ko if: messageKind() === 2 -->
            <span style="color: red" data-bind="text: message"></span>
            <!-- /ko -->
        </div>
    </div>
    <!-- /ko -->
    <div data-bind="if: messages().length === 0">
        <img src="/assets/loading.webp" alt="图片生成中，大约需要20秒，请稍候..." style="width: 100%"/>
        图片生成中，大约需要20秒，请稍候...
    </div>

    <!-- ko if: lobbyStatus() === 1 -->
    <form data-bind="submit: guess" class="guess-area">
        <input type="text" name="guess" required data-bind="value: guessText" />
        <button>猜</button>
    </form>
    <!-- /ko -->
    <!-- ko if: lobbyStatus() === 3 -->
    <div class="guess-area">
        <form method="post" style="display: inline-block" data-bind="submit: replay">
            <button>重置游戏</button>
        </form>
        &nbsp;
        <form method="post" action="/main/createRandomLobby" style="display: inline-block">
            <input type="hidden" data-bind="value: userName" name="user">
            <button type="submit">再玩一局新的，使用随机成语</button>
        </form>
    </div>
    <!-- /ko -->
    <!-- ko if: lobbyStatus() === 2 -->
    <div class="guess-area">
        <button type="button" data-bind="click: regenerate">重新生成</button>
    </div>
    <!-- /ko -->

    <script src="~/lib/knockout/build/output/knockout-latest.js"></script>
    <script src="~/lib/knockout/build/output/knockout.mapping-latest.js"></script>
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>
    <script src="~/lib/jquery/dist/jquery.js"></script>
    <script src="~/js/site.js"></script>
    <script>
        class VM {
            guessText = ko.observable('');
            lobbyStatus = ko.observable(@((int)lobby.RealStatus));
            messages = ko.observableArray(@(Json.Serialize(lobby.Messages.Select(x => x.ToViewModel()))).map(x => ko.mapping.fromJS(x)));
            userName = ko.observable(localStorage.getItem("userName") || randomName());

            changeName() {
                this.userName(prompt("请输入新名字：") || this.userName());
                localStorage.setItem("userName", this.userName());
            }

            guess() {
                $.post('/main/userGuess', {
                    user: this.userName(),
                    lobbyId: @lobby.Id,
                    guessText: this.guessText()
                }).then(() => {
                    this.guessText('');
                });
            }

            replay() {
                $.post('/main/replay', {
                    user: this.userName(),
                    lobbyId: @lobby.Id
                                }).then(() => {
                        this.guessText('');
                    });
            }

            regenerate() {
                $.post('/main/regenerate', {
                    user: this.userName(),
                    lobbyId: @lobby.Id
                                        }).then(() => {
                        this.guessText('');
                    });
            }
        }

        const vm = new VM();
        const c = new signalR.HubConnectionBuilder().withUrl("/mainHub").build();
        c.on('onNewMessage', (msg) => {
            vm.messages.push(ko.mapping.fromJS(msg));
        });
        c.on('onMessageStreaming', (messageId, content) => {
            const msg = vm.messages().filter(x => x.id() === messageId)[0];
            msg.message(content);
        });
        c.on('onLobbyStatusChanged', (id, status) => {
            if (id !== @lobby.Id) return;

            vm.lobbyStatus(status);
            if (status === 1) {
                // replay
                location.reload();
            }
        });
        c.start().then(async () => {
            await c.invoke('joinLobby', @lobby.Id);
        });
        ko.applyBindings(vm);
    </script>
</body>
</html>